package CollectionFramework;

import java.util.HashMap;
import java.util.Map;

/**
 * Библиотека коллекций, эта тема достаточно большая, ее можно прочесть на стр. 136(электронный счет чик страниц pdf)
 * или 134 (отметка в книге).
 *
 * Коллекция - это обхъект, способный хранить группу одинаковых элементов.
 * Основные преимущества collection framework -
 * ускоряется процесс разработки и улучшается код
 * обеспечивается поддержка повторного использования кода
 * производится стандартизация интерфейса классов
 * реализуется поддержка многопоточного доступа
 *
 * Каждый интерфейс объявляет набор методов, которые нужно реализовать в программе:
 * Collection - группа эл-в (охватывает Set и List)
 * Set или SortedSet - множество эл-в (без дублирования)
 * List - список
 * Map или SortedMap - коллекция, где каждый элемент имеет свой ключ
 * Queue - очередь
 *
 * Встроенные классы реализующие функции в интерфейсах:
 * ArrayList - список как массив элементов
 * LinkedList -список, выполняющий функции связанного списка
 * HashSetDemo - множество Set как хеш-таблица
 * TreeSet - множество SortedSet как дерево
 * HashMap - индексированный словарь хеш
 * TreeMap - коллекция SortedMap как дерево
 *
 * Они обеспечивают простоту и удобство работы с большим количеством однотипных данных
 */

public class MapDemo {
    /**
     * В коллекцию можно сохранять только объекты, но не простые типы данных как int double
     * Но их можно добавить, если использовать класс оболочку (int - Integer, double - Double)
     */
    public static void main(String[] args) {
        //создание словаря
        Map map = new HashMap();

        //создание объекта-оболочки для double
        Double refDouble = new Double(1.55);

        //добовление объекта в коллекцию
        map.put("key", refDouble);

        //полученик класса-оболочки из коллекции
         refDouble = (Double)map.get("key");

        //получение значения double из объекта оболочки класса
        double d = refDouble.doubleValue();
        System.out.println(d);
    }

}
