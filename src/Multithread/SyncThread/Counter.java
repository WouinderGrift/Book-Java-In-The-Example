package Multithread.SyncThread;

import java.io.IOException;

/**
 * Когда мы работаем с несколькими потоками, может сложиться ситуация, при которой, несколько потоков пытаются получить доступ к одному и тому же объекту, что может привести  к непредсказуемым результатам.
 * <p>
 * Например, несколько потоком пытаются внести изменения в один  и тот же текстовый файл.
 * В результате этого данные могут быть повреждены, так как один поток пытается записать данные “поверх” данных второго потока.
 * <p>
 * Для предотвращения таких ситуаций приеняется синзронизация.
 * <p>
 * Синхронизация – это механизм, который гарантирует, что только один поток может работать с определёнными данным в один момент времени.
 */

public class Counter {
    public void displayCounter() {

        try {
            for (int i = 1; i <= 5; i++) {
                System.out.println("Counter " + i);
            }

        } catch (Exception e) {
            System.out.println("Thread interrupted");
        }
    }
}
